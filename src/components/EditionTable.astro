---
import { readFile } from "node:fs/promises";

import { createBaseurl } from "../lib/baseurl";

interface Meta {
	id: string;
	title: string;
	source: string;
	url: string;
}
const about = await readFile("edition/about.json", "utf-8");
const meta: Record<
	string,
	{
		title: string;
		source: string;
	}
> = JSON.parse(about);
const data = [] as Array<Meta>;
for (const [id, { title, source }] of Object.entries(meta)) {
	data.push({
		id: id,
		title: title,
		source: source,
		url: createBaseurl(`edition/${id.replace(".xml", ".html?aside=closed#abc_page_title")}`),
	});
}
---

<div id="toc" class="ml-12 mt-4"></div>
<style>
	@import url("https://unpkg.com/tabulator-tables@6.2.1/dist/css/tabulator.min.css");
	@import url("https://unpkg.com/tabulator-tables@6.2.1/dist/css/tabulator_semanticui.min.css");
</style>
<script is:inline src="https://unpkg.com/tabulator-tables@6.2.1/dist/js/tabulator.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/luxon@3.4.4/build/global/luxon.min.js"></script>
<script is:inline define:vars={{ data }}>
	const table = new Tabulator("#toc", {
		height: 400,
		layout: "fitColumns",
		pagination: true,
		headerFilterLiveFilterDelay: 600,
		initialSort: [
			{ column: "title", dir: "asc" }, //sort by this first
		],
		columns: [
			{ title: "Titel", field: "title", headerFilter: "input" },
			{
				title: "Quelle",
				field: "source",
				headerFilter: "input",
			},
		],
		data: data,
		responsiveLayout: "collapse",
		tooltips: true,
	});
	// @ts-ignore
	table.on("rowClick", function (e, row) {
		console.log(e);
		var data = row.getData();
		if (data.link != null) {
			var url = data.link;
		} else if (data.id != null) {
			var url = `edition/${data.id.replace(".xml", ".html?aside=closed#abc_page_title")}`;
		}
		window.location.href = url;
	});
</script>
