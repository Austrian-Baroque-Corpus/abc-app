---
import EditionFragment from "./EditionFragment.astro";
---

<div class="mx-auto my-8 py-4 text-center sm:px-2 md:px-2">
	<div class="px-4">
		<div
			class="xs:w-[250px] mx-auto w-[1200px] max-w-[1200px] sm:w-[300px] md:w-[600px] lg:w-[800px]"
		>
			<h4 class="pt-2 font-segoe text-xl">
				<img class="inline" src="/Suche.jpg" alt="Suche" /> in den Abacus Transkripten
			</h4>
			<div class="font-segoe text-lg text-gray-600">
				<a target="_blank" href="https://abacus-noske.acdh-dev.oeaw.ac.at/crystal"
					>Erweiterte Suche in Crystal</a
				>
				<form class="m-2 h-full">
					<span
						class="relative mt-4 h-[27px] w-[90%] overflow-visible rounded-sm bg-white p-0.5 align-top font-antiqua"
						id="input-query"
						><input
							type="checkbox"
							value="unused"
							class="m-0 w-[1px] p-0 opacity-0"
							id="vkbtquery"
						/><label
							for="vkbtquery"
							class="left-0 top-0 m-2 h-[32px] cursor-pointer rounded-md border border-gray-300 bg-gray-300 p-2 align-middle text-sm shadow-md"
							>äāâ</label
						><ul
							id="vkbtquerymenu"
							role="menu"
							class="absolute bottom-0 left-14 z-50 m-0 mt-[8px] hidden list-none whitespace-nowrap border border-gray-300 bg-white p-0.5"
							data-context="abacus"
						>
							<!-- note that newlines are erased when this is loaded on demand. There are side effects as
					new lines count as some space character which are missing in the on demand loaded variant of this
					HTML snippet because of how jQuery's cloning works! The following is one way of making sure there is no space so it can be set by css in a consistent way.-->

							<li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								ä
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								ā
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								â
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								æ
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								ë
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								e̅
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								m̅
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								n̅
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								œ
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								ö
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								ü
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								ß
							</li><li
								role="menuitem"
								class="m-1 inline-block w-8 cursor-default bg-gray-300 pl-0 text-center shadow-md"
							>
								’
							</li>
						</ul></span
					>
				</form>
			</div>
			<div
				id="noske-search"
				class="xs:w-[200px] mx-auto w-[800px] text-center sm:w-[200px] md:w-[600px]"
			>
			</div>
		</div>
		<div
			class="xs:grid-cols-1 grid grid-cols-2 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 xl:grid-cols-1"
		>
			<div class="p-4">
				<div id="hitsbox"></div>
				<div class="mx-auto grid grid-cols-2">
					<div id="noske-pagination" class="text-right"></div>
					<div id="statsbox" class="text-left"></div>
				</div>
			</div>
			<div class="p-4">
				<EditionFragment />
			</div>
		</div>
	</div>
</div>

<style is:global>
	.bg-abacus-search {
		min-width: 130px;
		background-image: url("/ihr_findet_padded.jpg");
		background-position: center;
		background-size: cover;
		background-repeat: no-repeat;
	}

	.kwic.active {
		border: 2px solid rgb(239 68 68);
		border-radius: 0.25rem;
	}

	.kwic {
		cursor: pointer;
	}
</style>
<script>
	const vkbtlabel = document.getElementById("vkbtquery");
	const vkbtmenu = document.getElementById("vkbtquerymenu");
	vkbtlabel?.addEventListener("click", () => {
		vkbtmenu?.classList.toggle("hidden");
	});
	const vkbtmenuitems = document.querySelectorAll("#vkbtquerymenu li");
	vkbtmenuitems.forEach((item) => {
		item.addEventListener("click", (e) => {
			const noskeInput = document.getElementById("noske-input-input") as HTMLInputElement;
			// @ts-ignore
			noskeInput.value += e.target!.textContent;
			noskeInput.dispatchEvent(new Event("input", { bubbles: true }));
		});
	});
</script>
<script>
	import { NoskeSearch } from "acdh-noske-search";
	import { loadContent } from "../lib/synopticView";

	const search = new NoskeSearch({
		container: "noske-search",
		autocomplete: true,
		wordlistattr: ["word", "lemma", "pos", "id", "placeName", "persName", "pbId"],
	});

	search.minQueryLength = 2;

	search.search({
		debug: false,
		client: {
			//base: "http://localhost:8080",
			base: "https://abacus-noske.acdh-dev.oeaw.ac.at",
			corpname: "abacus",
			attrs: "word,lemma,pos,id,placeName,persName,pbId",
			structs: "doc,g",
			refs: "doc.title",
		},
		hits: {
			id: "hitsbox",
			css: {
				div: "grid grid-cols-2 gap-2 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 xl:grid-cols-1 xs:grid-cols-1",
				table: "table-auto",
				kwic: "text-red-500 text-lg",
				trHead: "bg-gray-200",
			},
		},
		searchInput: {
			id: "noske-input",
			placeholder: "Tippe zumindest zwei Zeichen um Wortvorschläge zu erhalten...",
			button: "Suchen",
			css: {
				button: "text-xl bg-abacus-search text-transparent shadow-lg border border-gray-300 ",
			},
		},
		pagination: {
			id: "noske-pagination",
			css: {
				select: "rounded-lg text-xl p-2",
			},
		},
		stats: {
			id: "statsbox",
			label: "Ergebnisse:",
			css: {
				label: "text-lg text-gray-600 pt-2",
			},
		},
		autocompleteOptions: {
			id: "noske-autocomplete",
			css: {
				div: "bg-white border border-gray-300 absolute ml-[114px] mt-10 text-left overflow-y-scroll overflow-x-hidden max-h-[400px]",
				ul: "p-0",
				li: "p-2 hover:bg-gray-100 text-sm text-gray-500 hover:cursor-pointer",
				loader:
					"m-2 border-4 border-gray-300 border-t-4 border-t-black rounded-full relative w-[40px] h-[40px] text-center",
			},
		},
		config: {
			tableView: false,
			customSynopticView: (resultLineId) => {
				let first_entry = Object.entries(resultLineId)[0];
				if (first_entry) {
					let key = first_entry[0];
					let value = first_entry[1];
					let kwic = document.getElementById(key) as HTMLElement;
					kwic?.classList.add("active");
					let attr = value.kwic_attr?.split("/");
					let pdId = attr![attr!.length - 1];
					let hash = key.split("__")[2];
					loadContent(pdId, "noske-synoptic-view", hash);
				}
				const input = document.querySelector("#noske-input input") as HTMLInputElement;
				input?.addEventListener("input", (e) => {
					// @ts-ignore
					if (e.target?.value === "") {
						let view = document.getElementById("noske-synoptic-view") as HTMLElement;
						view?.parentElement!.classList.toggle("hidden");
						view?.parentElement!.classList.toggle("active");
					}
				});
				Object.entries(resultLineId).forEach(([key, value]) => {
					let kwic = document.getElementById(key) as HTMLElement;
					kwic?.classList.add("kwic");
					kwic?.addEventListener("click", () => {
						let active = document.querySelectorAll(".kwic.active");
						active.forEach((element) => {
							element.classList.remove("active");
						});
						kwic?.classList.add("active");
						let attr = value.kwic_attr?.split("/");
						let pdId = attr![attr!.length - 1];
						let hash = key.split("__")[2];
						// let id = key.split("__")[1];
						loadContent(pdId, "noske-synoptic-view", hash);
					});
				});
			},
		},
	});
</script>
